# กำหนดชื่อ
name: DEV - Build

# Event Triggering
on:
  workflow_dispatch:

  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

# Environment Variable
env:
  APP_NAME: rg-ass3-frontend
  CONTAINER_REPOSITORY: "acrass301.azurecr.io"
  IMAGE_TAG: "0.0.1-SNAPSHOT"

# Unit Test
jobs:
  unitest:
    name: UnitTest
    runs-on: ubuntu-latest
    environment: env
    steps:
      # Checkout Code
      - name: Checkout code
        uses: actions/checkout@v2

      # Setup Node
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      # Install Node dependencies
      - name: Install dependencies
        run: npm install

      # Unit test with Node Jest
      - name: Unit test
        run: npm run test:unit

      # Upload Reports Node Report Jest
      - name: Upload Reports
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results
          path: "${{ github.workspace }}/coverage/lcov-report/*"

  # SAST Job with CoreQL
  analyze:
    name: SAST CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ["javascript"]

    # Checkout Code
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Initialize CodeQL
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}

      # Autobuild CodeQL
      - name: Autobuild
        uses: github/codeql-action/autobuild@v1

      # Perform CodeQL Analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  # Build Job
  build:
    name: Build
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: https://github.com/alias-th/่dpu-tutorial-pipeline/actions/workflows/dev-tutorial-backend-deploy.yml
    needs: [unitest, analyze] # if on env sit don't use

    steps:
      # Checkout Code
      - name: Checkout code
        uses: actions/checkout@v2

      # Build Image
      - name: Build image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ${{ env.CONTAINER_REPOSITORY }}/${{ env.APP_NAME }}:${{env.IMAGE_TAG}}

      # Login ACR
      - name: "ACR login"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.CONTAINER_REPOSITORY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Push image
        run: docker image push ${{ env.CONTAINER_REPOSITORY }}/${{ env.APP_NAME }}:${{env.IMAGE_TAG}}

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: alias-th/dpu-tutorial-pipeline
          event-type: dpu-tutorial-backend-cd-dev
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
